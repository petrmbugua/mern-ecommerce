[{"/home/petr/projects/project-1/client/src/reportWebVitals.js":"1","/home/petr/projects/project-1/client/src/user/EditProfile.js":"2","/home/petr/projects/project-1/client/src/shop/MyShops.js":"3","/home/petr/projects/project-1/client/src/cart/Cart.js":"4","/home/petr/projects/project-1/client/src/product/NewProduct.js":"5","/home/petr/projects/project-1/client/src/product/Suggestions.js":"6","/home/petr/projects/project-1/client/src/cart/AddToCart.js":"7","/home/petr/projects/project-1/client/src/product/Products.js":"8","/home/petr/projects/project-1/client/src/user/DeleteUser.js":"9","/home/petr/projects/project-1/client/src/user/Profile.js":"10","/home/petr/projects/project-1/client/src/cart/Checkout.js":"11","/home/petr/projects/project-1/client/src/cart/PlaceOrder.js":"12","/home/petr/projects/project-1/client/src/core/Menu.js":"13","/home/petr/projects/project-1/client/src/user/Signup.js":"14","/home/petr/projects/project-1/client/src/shop/EditShop.js":"15","/home/petr/projects/project-1/client/src/order/ShopOrders.js":"16","/home/petr/projects/project-1/client/src/user/api-user.js":"17","/home/petr/projects/project-1/client/src/product/Search.js":"18","/home/petr/projects/project-1/client/src/cart/CartItems.js":"19","/home/petr/projects/project-1/client/src/product/DeleteProduct.js":"20","/home/petr/projects/project-1/client/src/App.js":"21","/home/petr/projects/project-1/client/src/shop/NewShop.js":"22","/home/petr/projects/project-1/client/src/shop/Shop.js":"23","/home/petr/projects/project-1/client/src/order/Order.js":"24","/home/petr/projects/project-1/client/src/cart/cart-helper.js":"25","/home/petr/projects/project-1/client/src/order/MyOrders.js":"26","/home/petr/projects/project-1/client/src/auth/PrivateRoute.js":"27","/home/petr/projects/project-1/client/src/order/api-order.js":"28","/home/petr/projects/project-1/client/src/order/ProductOrderEdit.js":"29","/home/petr/projects/project-1/client/src/auth/Signin.js":"30","/home/petr/projects/project-1/client/src/auth/auth-helper.js":"31","/home/petr/projects/project-1/client/src/product/EditProduct.js":"32","/home/petr/projects/project-1/client/src/product/api-product.js":"33","/home/petr/projects/project-1/client/src/shop/api-shop.js":"34","/home/petr/projects/ecommerce/client/src/App.js":"35","/home/petr/projects/ecommerce/client/src/user/Users.js":"36","/home/petr/projects/ecommerce/client/src/auth/Signin.js":"37","/home/petr/projects/ecommerce/client/src/product/Product.js":"38","/home/petr/projects/ecommerce/client/src/product/Categories.js":"39","/home/petr/projects/ecommerce/client/src/cart/AddToCart.js":"40","/home/petr/projects/ecommerce/client/src/product/DeleteProduct.js":"41"},{"size":362,"mtime":1611936884750,"results":"42","hashOfConfig":"43"},{"size":4559,"mtime":1611936884760,"results":"44","hashOfConfig":"43"},{"size":3913,"mtime":1611936884750,"results":"45","hashOfConfig":"43"},{"size":845,"mtime":1611937091070,"results":"46","hashOfConfig":"43"},{"size":4758,"mtime":1611936884750,"results":"47","hashOfConfig":"43"},{"size":3995,"mtime":1611936884750,"results":"48","hashOfConfig":"43"},{"size":1471,"mtime":1611936906440,"results":"49","hashOfConfig":"43"},{"size":2451,"mtime":1611936884750,"results":"50","hashOfConfig":"43"},{"size":2042,"mtime":1611936884760,"results":"51","hashOfConfig":"43"},{"size":3425,"mtime":1611937231230,"results":"52","hashOfConfig":"43"},{"size":4474,"mtime":1611937127070,"results":"53","hashOfConfig":"43"},{"size":2774,"mtime":1611939373510,"results":"54","hashOfConfig":"43"},{"size":3242,"mtime":1611937357100,"results":"55","hashOfConfig":"43"},{"size":3586,"mtime":1611936884760,"results":"56","hashOfConfig":"43"},{"size":5351,"mtime":1611936884750,"results":"57","hashOfConfig":"43"},{"size":3841,"mtime":1611936884740,"results":"58","hashOfConfig":"43"},{"size":2350,"mtime":1611936884760,"results":"59","hashOfConfig":"43"},{"size":3172,"mtime":1611936884750,"results":"60","hashOfConfig":"43"},{"size":5756,"mtime":1611936884730,"results":"61","hashOfConfig":"43"},{"size":2028,"mtime":1611936884740,"results":"62","hashOfConfig":"43"},{"size":339,"mtime":1611936884710,"results":"63","hashOfConfig":"43"},{"size":3895,"mtime":1611936884750,"results":"64","hashOfConfig":"43"},{"size":3358,"mtime":1611936884750,"results":"65","hashOfConfig":"43"},{"size":6510,"mtime":1611936884740,"results":"66","hashOfConfig":"43"},{"size":1519,"mtime":1611936884740,"results":"67","hashOfConfig":"43"},{"size":2031,"mtime":1611936884740,"results":"68","hashOfConfig":"43"},{"size":443,"mtime":1611936884730,"results":"69","hashOfConfig":"43"},{"size":3172,"mtime":1611936884740,"results":"70","hashOfConfig":"43"},{"size":6025,"mtime":1611936884740,"results":"71","hashOfConfig":"43"},{"size":2914,"mtime":1611936884730,"results":"72","hashOfConfig":"43"},{"size":948,"mtime":1611936884730,"results":"73","hashOfConfig":"43"},{"size":5795,"mtime":1611936884740,"results":"74","hashOfConfig":"43"},{"size":2779,"mtime":1611936884750,"results":"75","hashOfConfig":"43"},{"size":1989,"mtime":1611940305240,"results":"76","hashOfConfig":"43"},{"size":339,"mtime":1611936884710,"results":"77","hashOfConfig":"78"},{"size":2321,"mtime":1611936884760,"results":"79","hashOfConfig":"78"},{"size":2914,"mtime":1611936884730,"results":"80","hashOfConfig":"78"},{"size":4181,"mtime":1611936884750,"results":"81","hashOfConfig":"78"},{"size":3156,"mtime":1611936884740,"results":"82","hashOfConfig":"78"},{"size":1471,"mtime":1611936906440,"results":"83","hashOfConfig":"78"},{"size":2028,"mtime":1611936884740,"results":"84","hashOfConfig":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},"1y88kf2",{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"87"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"87"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"87"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"101"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"87"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"87"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"101"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"87"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"87"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"87"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"150"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"87"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1oss29u",{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/petr/projects/project-1/client/src/reportWebVitals.js",[],["187","188"],"/home/petr/projects/project-1/client/src/user/EditProfile.js",["189"],"import React, {useState, useEffect} from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport Icon from '@material-ui/core/Icon'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch from '@material-ui/core/Switch'\nimport { makeStyles } from '@material-ui/core/styles'\nimport auth from './../auth/auth-helper'\nimport {read, update} from './api-user.js'\nimport {Redirect} from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 600,\n    margin: 'auto',\n    textAlign: 'center',\n    marginTop: theme.spacing(5),\n    paddingBottom: theme.spacing(2)\n  },\n  title: {\n    margin: theme.spacing(2),\n    color: theme.palette.protectedTitle\n  },\n  error: {\n    verticalAlign: 'middle'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 300\n  },\n  submit: {\n    margin: 'auto',\n    marginBottom: theme.spacing(2)\n  },\n  subheading: {\n    marginTop: theme.spacing(2),\n    color: theme.palette.openTitle\n  }\n}))\n\nexport default function EditProfile({ match }) {\n  const classes = useStyles()\n  const [values, setValues] = useState({\n      name: '',\n      email: '',\n      password: '',\n      seller: false,\n      redirectToProfile: false,\n      error: ''\n  })\n  const jwt = auth.isAuthenticated()\n  useEffect(() => {\n    const abortController = new AbortController()\n    const signal = abortController.signal\n\n    read({\n      userId: match.params.userId\n    }, {t: jwt.token}, signal).then((data) => {\n      if (data && data.error) {\n        setValues({...values, error: data.error})\n      } else {\n        setValues({...values, name: data.name, email: data.email, seller: data.seller})\n      }\n    })\n    return function cleanup(){\n      abortController.abort()\n    }\n\n  }, [match.params.userId])\n\n  const clickSubmit = () => {\n    const user = {\n      name: values.name || undefined,\n      email: values.email || undefined,\n      password: values.password || undefined,\n      seller: values.seller || undefined\n    }\n    update({\n      userId: match.params.userId\n    }, {\n      t: jwt.token\n    }, user).then((data) => {\n      if (data && data.error) {\n        setValues({...values, error: data.error})\n      } else {\n        auth.updateUser(data, ()=>{\n          setValues({...values, userId: data._id, redirectToProfile: true})\n        })\n      }\n    })\n  }\n  const handleChange = name => event => {\n    setValues({...values, [name]: event.target.value})\n  }\n  const handleCheck = (event, checked) => {\n    setValues({...values, 'seller': checked})\n  }\n\n  if (values.redirectToProfile) {\n    return (<Redirect to={'/user/' + values.userId}/>)\n  }\n    return (\n      <Card className={classes.card}>\n        <CardContent>\n          <Typography variant=\"h6\" className={classes.title}>\n            Edit Profile\n          </Typography>\n          <TextField id=\"name\" label=\"Name\" className={classes.textField} value={values.name} onChange={handleChange('name')} margin=\"normal\"/><br/>\n          <TextField id=\"email\" type=\"email\" label=\"Email\" className={classes.textField} value={values.email} onChange={handleChange('email')} margin=\"normal\"/><br/>\n          <TextField id=\"password\" type=\"password\" label=\"Password\" className={classes.textField} value={values.password} onChange={handleChange('password')} margin=\"normal\"/>\n          <Typography variant=\"subtitle1\" className={classes.subheading}>\n            Seller Account\n          </Typography>\n          <FormControlLabel\n            control={\n              <Switch classes={{\n                                checked: classes.checked,\n                                bar: classes.bar,\n                              }}\n                      checked={values.seller}\n                      onChange={handleCheck}\n              />}\n            label={values.seller? 'Active' : 'Inactive'}\n          />\n          <br/> {\n            values.error && (<Typography component=\"p\" color=\"error\">\n              <Icon color=\"error\" className={classes.error}>error</Icon>\n              {values.error}\n            </Typography>)\n          }\n        </CardContent>\n        <CardActions>\n          <Button color=\"primary\" variant=\"contained\" onClick={clickSubmit} className={classes.submit}>Submit</Button>\n        </CardActions>\n      </Card>\n    )\n}\n","/home/petr/projects/project-1/client/src/shop/MyShops.js",["190","191"],"import React, {useState, useEffect} from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Avatar from '@material-ui/core/Avatar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Icon from '@material-ui/core/Icon'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Edit from '@material-ui/icons/Edit'\nimport Divider from '@material-ui/core/Divider'\nimport auth from './../auth/auth-helper'\nimport {listByOwner} from './api-shop.js'\nimport {Redirect, Link} from 'react-router-dom'\nimport DeleteShop from './DeleteShop'\n\nconst useStyles = makeStyles(theme => ({\n  root: theme.mixins.gutters({\n    maxWidth: 600,\n    margin: 'auto',\n    padding: theme.spacing(3),\n    marginTop: theme.spacing(5)\n  }),\n  title: {\n    margin: `${theme.spacing(3)}px 0 ${theme.spacing(3)}px ${theme.spacing(1)}px` ,\n    color: theme.palette.protectedTitle,\n    fontSize: '1.2em'\n  },\n  addButton:{\n    float:'right'\n  },\n  leftIcon: {\n    marginRight: \"8px\"\n  }\n}))\n\nexport default function MyShops(){\n  const classes = useStyles();\n  const [shops, setShops] = useState([])\n  const [redirectToSignin, setRedirectToSignin] = useState(false)\n  const jwt = auth.isAuthenticated()\n\n  useEffect(() => {\n    const abortController = new AbortController()\n    const signal = abortController.signal\n    listByOwner({\n      userId: jwt.user._id\n    }, {t: jwt.token}, signal).then((data) => {\n      if (data.error) {\n        setRedirectToSignin(true)\n      } else {\n        setShops(data)\n      }\n    })\n    return function cleanup(){\n      abortController.abort()\n    }\n  }, [])\n\n  const removeShop = (shop) => {\n    const updatedShops = [...shops]\n    const index = updatedShops.indexOf(shop)\n    updatedShops.splice(index, 1)\n    setShops(updatedShops)\n  }\n\n    if (redirectToSignin) {\n      return <Redirect to='/signin'/>\n    }\n    return (\n    <div>\n      <Paper className={classes.root} elevation={4}>\n        <Typography type=\"title\" className={classes.title}>\n          Your Shops\n          <span className={classes.addButton}>\n            <Link to=\"/seller/shop/new\">\n              <Button color=\"primary\" variant=\"contained\">\n                <Icon className={classes.leftIcon}>add_box</Icon>  New Shop\n              </Button>\n            </Link>\n          </span>\n        </Typography>\n        <List dense>\n        {shops.map((shop, i) => {\n            return   <span key={i}>\n              <ListItem button>\n                <ListItemAvatar>\n                  <Avatar src={'/api/shops/logo/'+shop._id+\"?\" + new Date().getTime()}/>\n                </ListItemAvatar>\n                <ListItemText primary={shop.name} secondary={shop.description}/>\n                { auth.isAuthenticated().user && auth.isAuthenticated().user._id == shop.owner._id &&\n                  (<ListItemSecondaryAction>\n                    <Link to={\"/seller/orders/\" + shop.name+ '/'+shop._id}>\n                      <Button aria-label=\"Orders\" color=\"primary\">\n                        View Orders\n                      </Button>\n                    </Link>\n                    <Link to={\"/seller/shop/edit/\" + shop._id}>\n                      <IconButton aria-label=\"Edit\" color=\"primary\">\n                        <Edit/>\n                      </IconButton>\n                    </Link>\n                    <DeleteShop shop={shop} onRemove={removeShop}/>\n                  </ListItemSecondaryAction>)\n                }\n              </ListItem>\n              <Divider/>\n            </span>})}\n        </List>\n      </Paper>\n    </div>)\n}","/home/petr/projects/project-1/client/src/cart/Cart.js",["192"],"import React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CartItems from './CartItems';\nimport Checkout from './Checkout';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    margin: 30,\n  },\n}));\n\nexport default function Cart() {\n  const classes = useStyles();\n  const [checkout, setCheckout] = useState(false);\n\n  const showCheckout = (val) => {\n    setCheckout(val);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={8}>\n        <Grid item xs={6} sm={6}>\n          <CartItems checkout={checkout} setCheckout={showCheckout} />\n        </Grid>\n        {checkout && (\n          <Grid item xs={6} sm={6}>\n            <Checkout />\n          </Grid>\n        )}\n      </Grid>\n    </div>\n  );\n}\n","/home/petr/projects/project-1/client/src/product/NewProduct.js",[],"/home/petr/projects/project-1/client/src/product/Suggestions.js",[],["193","194"],"/home/petr/projects/project-1/client/src/cart/AddToCart.js",[],"/home/petr/projects/project-1/client/src/product/Products.js",[],"/home/petr/projects/project-1/client/src/user/DeleteUser.js",[],"/home/petr/projects/project-1/client/src/user/Profile.js",["195","196","197"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Edit from '@material-ui/icons/Edit';\nimport Person from '@material-ui/icons/Person';\nimport Divider from '@material-ui/core/Divider';\nimport DeleteUser from './DeleteUser';\nimport auth from './../auth/auth-helper';\nimport { read } from './api-user.js';\nimport { Redirect, Link } from 'react-router-dom';\nimport MyOrders from './../order/MyOrders';\n\nconst useStyles = makeStyles((theme) => ({\n  root: theme.mixins.gutters({\n    maxWidth: 600,\n    margin: 'auto',\n    padding: theme.spacing(3),\n    marginTop: theme.spacing(5),\n  }),\n  title: {\n    margin: `${theme.spacing(3)}px 0 ${theme.spacing(2)}px`,\n    color: theme.palette.protectedTitle,\n  },\n  stripe_connect: {\n    marginRight: '10px',\n  },\n  stripe_connected: {\n    verticalAlign: 'super',\n    marginRight: '10px',\n  },\n  auctions: {\n    maxWidth: 600,\n    margin: '24px',\n    padding: theme.spacing(3),\n    backgroundColor: '#3f3f3f0d',\n  },\n}));\n\nexport default function Profile({ match }) {\n  const classes = useStyles();\n  const [user, setUser] = useState({});\n  const [redirectToSignin, setRedirectToSignin] = useState(false);\n  const jwt = auth.isAuthenticated();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n    read(\n      {\n        userId: match.params.userId,\n      },\n      { t: jwt.token },\n      signal\n    ).then((data) => {\n      if (data && data.error) {\n        setRedirectToSignin(true);\n      } else {\n        setUser(data);\n      }\n    });\n\n    return function cleanup() {\n      abortController.abort();\n    };\n  }, [match.params.userId]);\n\n  if (redirectToSignin) {\n    return <Redirect to='/signin' />;\n  }\n  return (\n    <Paper className={classes.root} elevation={4}>\n      <Typography variant='h6' className={classes.title}>\n        Profile\n      </Typography>\n      <List dense>\n        <ListItem>\n          <ListItemAvatar>\n            <Avatar>\n              <Person />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary={user.name} secondary={user.email} />{' '}\n          {auth.isAuthenticated().user &&\n            auth.isAuthenticated().user._id == user._id && (\n              <ListItemSecondaryAction>\n              \n                <Link to={'/user/edit/' + user._id}>\n                  <IconButton aria-label='Edit' color='primary'>\n                    <Edit />\n                  </IconButton>\n                </Link>\n                <DeleteUser userId={user._id} />\n              </ListItemSecondaryAction>\n            )}\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText\n            primary={'Joined: ' + new Date(user.created).toDateString()}\n          />\n        </ListItem>\n      </List>\n      <MyOrders />\n     \n    </Paper>\n  );\n}\n","/home/petr/projects/project-1/client/src/cart/Checkout.js",["198"],"import React, { useState, useEffect } from 'react';\nimport Card from '@material-ui/core/Card';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Icon from '@material-ui/core/Icon';\nimport auth from './../auth/auth-helper';\nimport cart from './cart-helper.js';\nimport PlaceOrder from './PlaceOrder';\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: '24px 0px',\n    padding: '16px 40px 90px 40px',\n    backgroundColor: '#80808017',\n  },\n  title: {\n    margin: '24px 16px 8px 0px',\n    color: theme.palette.openTitle,\n  },\n  subheading: {\n    color: 'rgba(88, 114, 128, 0.87)',\n    marginTop: '20px',\n  },\n  addressField: {\n    marginTop: '4px',\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: '45%',\n  },\n  streetField: {\n    marginTop: '4px',\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: '93%',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: '90%',\n  },\n}));\n\nexport default function Checkout() {\n  const classes = useStyles();\n  const user = auth.isAuthenticated().user;\n  const [values, setValues] = useState({\n    checkoutDetails: {\n      products: cart.getCart(),\n      customer_name: user.name,\n      customer_email: user.email,\n      delivery_address: {\n        street: '',\n        city: '',\n        state: '',\n        zipcode: '',\n        country: '',\n      },\n    },\n    error: '',\n  });\n\n  const handleCustomerChange = (name) => (event) => {\n    let checkoutDetails = values.checkoutDetails;\n    checkoutDetails[name] = event.target.value || undefined;\n    setValues({ ...values, checkoutDetails: checkoutDetails });\n  };\n\n  const handleAddressChange = (name) => (event) => {\n    let checkoutDetails = values.checkoutDetails;\n    checkoutDetails.delivery_address[name] = event.target.value || undefined;\n    setValues({ ...values, checkoutDetails: checkoutDetails });\n  };\n\n  return (\n    <Card className={classes.card}>\n      <Typography type='title' className={classes.title}>\n        Checkout\n      </Typography>\n      <TextField\n        id='name'\n        label='Name'\n        className={classes.textField}\n        value={values.checkoutDetails.customer_name}\n        onChange={handleCustomerChange('customer_name')}\n        margin='normal'\n      />\n      <br />\n      <TextField\n        id='email'\n        type='email'\n        label='Email'\n        className={classes.textField}\n        value={values.checkoutDetails.customer_email}\n        onChange={handleCustomerChange('customer_email')}\n        margin='normal'\n      />\n      <br />\n      <Typography\n        type='subheading'\n        component='h3'\n        className={classes.subheading}\n      >\n        Delivery Address\n      </Typography>\n      <TextField\n        id='street'\n        label='Street Address'\n        className={classes.streetField}\n        value={values.checkoutDetails.delivery_address.street}\n        onChange={handleAddressChange('street')}\n        margin='normal'\n      />\n      <br />\n      <TextField\n        id='city'\n        label='City'\n        className={classes.addressField}\n        value={values.checkoutDetails.delivery_address.city}\n        onChange={handleAddressChange('city')}\n        margin='normal'\n      />\n      <TextField\n        id='state'\n        label='State'\n        className={classes.addressField}\n        value={values.checkoutDetails.delivery_address.state}\n        onChange={handleAddressChange('state')}\n        margin='normal'\n      />\n      <br />\n      <TextField\n        id='zipcode'\n        label='Zip Code'\n        className={classes.addressField}\n        value={values.checkoutDetails.delivery_address.zipcode}\n        onChange={handleAddressChange('zipcode')}\n        margin='normal'\n      />\n      <TextField\n        id='country'\n        label='Country'\n        className={classes.addressField}\n        value={values.checkoutDetails.delivery_address.country}\n        onChange={handleAddressChange('country')}\n        margin='normal'\n      />\n      <br />{' '}\n      {values.error && (\n        <Typography component='p' color='error'>\n          <Icon color='error' className={classes.error}>\n            error\n          </Icon>\n          {values.error}\n        </Typography>\n      )}\n      <div>\n        <PlaceOrder checkoutDetails={values.checkoutDetails} />\n      </div>\n    </Card>\n  );\n}\n",["199","200"],"/home/petr/projects/project-1/client/src/cart/PlaceOrder.js",[],"/home/petr/projects/project-1/client/src/core/Menu.js",[],"/home/petr/projects/project-1/client/src/user/Signup.js",[],"/home/petr/projects/project-1/client/src/shop/EditShop.js",["201"],"import React, {useEffect, useState} from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport Icon from '@material-ui/core/Icon'\nimport Avatar from '@material-ui/core/Avatar'\nimport auth from './../auth/auth-helper'\nimport FileUpload from '@material-ui/icons/AddPhotoAlternate'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {read, update} from './api-shop.js'\nimport {Redirect} from 'react-router-dom'\nimport Grid from '@material-ui/core/Grid'\nimport MyProducts from './../product/MyProducts'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    margin: 30,\n  },\n  card: {\n    textAlign: 'center',\n    paddingBottom: theme.spacing(2)\n  },\n  title: {\n    margin: theme.spacing(2),\n    color: theme.palette.protectedTitle,\n    fontSize: '1.2em'\n  },\n  subheading: {\n    marginTop: theme.spacing(2),\n    color: theme.palette.openTitle\n  },\n  error: {\n    verticalAlign: 'middle'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 400\n  },\n  submit: {\n    margin: 'auto',\n    marginBottom: theme.spacing(2)\n  },\n  bigAvatar: {\n    width: 60,\n    height: 60,\n    margin: 'auto'\n  },\n  input: {\n    display: 'none'\n  },\n  filename:{\n    marginLeft:'10px'\n  }\n}))\n\nexport default function EditShop ({match}) {\n  const classes = useStyles()\n  const [values, setValues] = useState({\n      name: '',\n      description: '',\n      image: '',\n      redirect: false,\n      error: '',\n      id: ''\n  })\n  const jwt = auth.isAuthenticated()\n  useEffect(() => {\n    const abortController = new AbortController()\n    const signal = abortController.signal\n    read({\n      shopId: match.params.shopId\n    }, signal).then((data) => {\n      if (data.error) {\n        setValues({...values, error: data.error})\n      } else {\n        setValues({...values, id: data._id, name: data.name, description: data.description, owner: data.owner.name})\n      }\n    })\n    return function cleanup(){\n      abortController.abort()\n    }\n  }, [])\n\n  const clickSubmit = () => {\n    let shopData = new FormData()\n    values.name && shopData.append('name', values.name)\n    values.description && shopData.append('description', values.description)\n    values.image && shopData.append('image', values.image)\n    update({\n      shopId: match.params.shopId\n    }, {\n      t: jwt.token\n    }, shopData).then((data) => {\n      if (data.error) {\n        setValues({...values, error: data.error})\n      } else {\n        setValues({...values, 'redirect': true})\n      }\n    })\n  }\n  const handleChange = name => event => {\n    const value = name === 'image'\n      ? event.target.files[0]\n      : event.target.value\n    setValues({...values,  [name]: value })\n  }\n\n    const logoUrl = values.id\n          ? `/api/shops/logo/${values.id}?${new Date().getTime()}`\n          : '/api/shops/defaultphoto'\n    if (values.redirect) {\n      return (<Redirect to={'/seller/shops'}/>)\n    }\n    return (<div className={classes.root}>\n      <Grid container spacing={8}>\n        <Grid item xs={6} sm={6}>\n          <Card className={classes.card}>\n            <CardContent>\n              <Typography type=\"headline\" component=\"h2\" className={classes.title}>\n                Edit Shop\n              </Typography>\n              <br/>\n              <Avatar src={logoUrl} className={classes.bigAvatar}/><br/>\n              <input accept=\"image/*\" onChange={handleChange('image')} className={classes.input} id=\"icon-button-file\" type=\"file\" />\n              <label htmlFor=\"icon-button-file\">\n                <Button variant=\"contained\" color=\"default\" component=\"span\">\n                  Change Logo\n                  <FileUpload/>\n                </Button>\n              </label> <span className={classes.filename}>{values.image ? values.image.name : ''}</span><br/>\n              <TextField id=\"name\" label=\"Name\" className={classes.textField} value={values.name} onChange={handleChange('name')} margin=\"normal\"/><br/>\n              <TextField\n                id=\"multiline-flexible\"\n                label=\"Description\"\n                multiline\n                rows=\"3\"\n                value={values.description}\n                onChange={handleChange('description')}\n                className={classes.textField}\n                margin=\"normal\"\n              /><br/>\n              <Typography type=\"subheading\" component=\"h4\" className={classes.subheading}>\n                Owner: {values.owner}\n              </Typography><br/>\n              {\n                values.error && (<Typography component=\"p\" color=\"error\">\n                    <Icon color=\"error\" className={classes.error}>error</Icon>\n                    {values.error}\n                  </Typography>)\n              }\n            </CardContent>\n            <CardActions>\n              <Button color=\"primary\" variant=\"contained\" onClick={clickSubmit} className={classes.submit}>Update</Button>\n            </CardActions>\n          </Card>\n          </Grid>\n          <Grid item xs={6} sm={6}>\n            <MyProducts shopId={match.params.shopId}/>\n          </Grid>\n        </Grid>\n    </div>)\n}\n","/home/petr/projects/project-1/client/src/order/ShopOrders.js",["202","203","204"],"import React, {useState, useEffect} from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport Collapse from '@material-ui/core/Collapse'\nimport Divider from '@material-ui/core/Divider'\nimport auth from './../auth/auth-helper'\nimport {listByShop} from './api-order.js'\nimport ProductOrderEdit from './ProductOrderEdit'\n\nconst useStyles = makeStyles(theme => ({\n  root: theme.mixins.gutters({\n    maxWidth: 600,\n    margin: 'auto',\n    padding: theme.spacing(3),\n    marginTop: theme.spacing(5)\n  }),\n  title: {\n    margin: `${theme.spacing(3)}px 0 ${theme.spacing(3)}px ${theme.spacing(1)}px` ,\n    color: theme.palette.protectedTitle,\n    fontSize: '1.2em'\n  },\n  subheading: {\n    marginTop: theme.spacing(1),\n    color: '#434b4e',\n    fontSize: '1.1em'\n  },\n  customerDetails: {\n    paddingLeft: '36px',\n    paddingTop: '16px',\n    backgroundColor:'#f8f8f8'\n  }\n}))\nexport default function ShopOrders({match}) {\n  const classes = useStyles()\n  const [orders, setOrders] = useState([])\n  const [open, setOpen] = useState(0)\n\n\n    const jwt = auth.isAuthenticated()\n    useEffect(() => {\n      const abortController = new AbortController()\n      const signal = abortController.signal\n      listByShop({\n        shopId: match.params.shopId\n      }, {t: jwt.token}, signal).then((data) => {\n        if (data.error) {\n          console.log(data)\n        } else {\n          setOrders(data)\n        }\n      })\n      return function cleanup(){\n        abortController.abort()\n      }\n    }, [])\n\n  const handleClick = index => event => {\n    setOpen(index)\n  }\n\n  const updateOrders = (index, updatedOrder) => {\n    let updatedOrders = orders\n    updatedOrders[index] = updatedOrder\n    setOrders([...updatedOrders])\n  }\n\n    return (\n    <div>\n      <Paper className={classes.root} elevation={4}>\n        <Typography type=\"title\" className={classes.title}>\n          Orders in {match.params.shop}\n        </Typography>\n        <List dense >\n          {orders.map((order, index) => {\n            return   <span key={index}>\n              <ListItem button onClick={handleClick(index)}>\n                <ListItemText primary={'Order # '+order._id} secondary={(new Date(order.created)).toDateString()}/>\n                {open == index ? <ExpandLess /> : <ExpandMore />}\n              </ListItem><Divider/>\n              <Collapse component=\"li\" in={open == index} timeout=\"auto\" unmountOnExit>\n                <ProductOrderEdit shopId={match.params.shopId} order={order} orderIndex={index} updateOrders={updateOrders}/>\n                <div className={classes.customerDetails}>\n                  <Typography type=\"subheading\" component=\"h3\" className={classes.subheading}>\n                    Deliver to:\n                  </Typography>\n                  <Typography type=\"subheading\" component=\"h3\" color=\"primary\"><strong>{order.customer_name}</strong> ({order.customer_email})</Typography>\n                  <Typography type=\"subheading\" component=\"h3\" color=\"primary\">{order.delivery_address.street}</Typography>\n                  <Typography type=\"subheading\" component=\"h3\" color=\"primary\">{order.delivery_address.city}, {order.delivery_address.state} {order.delivery_address.zipcode}</Typography>\n                  <Typography type=\"subheading\" component=\"h3\" color=\"primary\">{order.delivery_address.country}</Typography><br/>\n                </div>\n              </Collapse>\n              <Divider/>\n            </span>})}\n        </List>\n      </Paper>\n    </div>)\n}\n","/home/petr/projects/project-1/client/src/user/api-user.js",[],"/home/petr/projects/project-1/client/src/product/Search.js",["205"],"import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\nimport {makeStyles} from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport Divider from '@material-ui/core/Divider'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport SearchIcon from '@material-ui/icons/Search'\nimport {list} from './api-product.js'\nimport Products from './Products'\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    margin: 'auto',\n    textAlign: 'center',\n    paddingTop: 10,\n    backgroundColor: '#80808024'\n  },\n  menu: {\n    width: 200,\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 130,\n    verticalAlign: 'bottom',\n    marginBottom: '20px'\n  },\n  searchField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 300,\n    marginBottom: '20px'\n  },\n  searchButton: {\n    minWidth: '20px',\n    height: '30px',\n    padding: '0 8px',\n    marginBottom: '20px'\n  }\n}))\n\nexport default function Search(props) {\n  const classes = useStyles()\n  const [values, setValues] = useState({\n      category: '',\n      search: '',\n      results: [],\n      searched: false\n  })\n  const handleChange = name => event => {\n    setValues({\n      ...values, [name]: event.target.value,\n    })\n  }\n  const search = () => {\n    if(values.search){\n      list({\n        search: values.search || undefined, category: values.category\n      }).then((data) => {\n        if (data.error) {\n          console.log(data.error)\n        } else {\n          setValues({...values, results: data, searched:true})\n        }\n      })\n    }\n  }\n  const enterKey = (event) => {\n    if(event.keyCode == 13){\n      event.preventDefault()\n      search()\n    }\n  }\n    return (\n      <div>\n        <Card className={classes.card}>\n          <TextField\n            id=\"select-category\"\n            select\n            label=\"Select category\"\n            className={classes.textField}\n            value={values.category}\n            onChange={handleChange('category')}\n            SelectProps={{\n              MenuProps: {\n                className: classes.menu,\n              },\n            }}\n            margin=\"normal\">\n            <MenuItem value=\"All\">\n              All\n            </MenuItem>\n            { props.categories.map(option => (\n              <MenuItem key={option} value={option}>\n                {option}\n              </MenuItem>\n            ))}\n          </TextField>\n          <TextField\n            id=\"search\"\n            label=\"Search products\"\n            type=\"search\"\n            onKeyDown={enterKey}\n            onChange={handleChange('search')}\n            className={classes.searchField}\n            margin=\"normal\"\n          />\n          <Button variant=\"contained\" color={'primary'} className={classes.searchButton} onClick={search}>\n            <SearchIcon/>\n          </Button>\n          <Divider/>\n          <Products products={values.results} searched={values.searched}/>\n        </Card>\n      </div>\n    )\n}\nSearch.propTypes = {\n  categories: PropTypes.array.isRequired\n}","/home/petr/projects/project-1/client/src/cart/CartItems.js",["206","207"],"import React, {useState} from 'react'\nimport auth from './../auth/auth-helper'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport PropTypes from 'prop-types'\nimport {makeStyles} from '@material-ui/core/styles'\nimport cart from './cart-helper.js'\nimport {Link} from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    margin: '24px 0px',\n    padding: '16px 40px 60px 40px',\n    backgroundColor: '#80808017'\n  },\n  title: {\n    margin: theme.spacing(2),\n    color: theme.palette.openTitle,\n    fontSize: '1.2em'\n  },\n  price: {\n    color: theme.palette.text.secondary,\n    display: 'inline'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    marginTop: 0,\n    width: 50\n  },\n  productTitle: {\n    fontSize: '1.15em',\n    marginBottom: '5px'\n  },\n  subheading: {\n    color: 'rgba(88, 114, 128, 0.67)',\n    padding: '8px 10px 0',\n    cursor: 'pointer',\n    display: 'inline-block'\n  },\n  cart: {\n    width: '100%',\n    display: 'inline-flex'\n  },\n  details: {\n    display: 'inline-block',\n    width: \"100%\",\n    padding: \"4px\"\n  },\n  content: {\n    flex: '1 0 auto',\n    padding: '16px 8px 0px'\n  },\n  cover: {\n    width: 160,\n    height: 125,\n    margin: '8px'\n  },\n  itemTotal: {\n    float: 'right',\n    marginRight: '40px',\n    fontSize: '1.5em',\n    color: 'rgb(72, 175, 148)'\n  },\n  checkout: {\n    float: 'right',\n    margin: '24px'\n  },\n  total: {\n    fontSize: '1.2em',\n    color: 'rgb(53, 97, 85)',\n    marginRight: '16px',\n    fontWeight: '600',\n    verticalAlign: 'bottom'\n  },\n  continueBtn: {\n    marginLeft: '10px'\n  },\n  itemShop: {\n    display: 'block',\n    fontSize: '0.90em',\n    color: '#78948f'\n  },\n  removeButton: {\n    fontSize: '0.8em'\n  }\n}))\n\nexport default function CartItems (props) {\n  const classes = useStyles()\n  const [cartItems, setCartItems] = useState(cart.getCart())\n\n  const handleChange = index => event => {\n    let updatedCartItems = cartItems\n    if(event.target.value == 0){\n      updatedCartItems[index].quantity = 1\n    }else{\n      updatedCartItems[index].quantity = event.target.value\n    }\n    setCartItems([...updatedCartItems])\n    cart.updateCart(index, event.target.value)\n  }\n\n  const getTotal = () => {\n    return cartItems.reduce((a, b) => {\n        return a + (b.quantity*b.product.price)\n    }, 0)\n  }\n\n  const removeItem = index => event =>{\n    let updatedCartItems = cart.removeItem(index)\n    if(updatedCartItems.length == 0){\n      props.setCheckout(false)\n    }\n    setCartItems(updatedCartItems)\n  }\n\n  const openCheckout = () => {\n    props.setCheckout(true)\n  }\n\n    return (<Card className={classes.card}>\n      <Typography type=\"title\" className={classes.title}>\n        Shopping Cart\n      </Typography>\n      {cartItems.length>0 ? (<span>\n          {cartItems.map((item, i) => {\n            return <span key={i}><Card className={classes.cart}>\n              <CardMedia\n                className={classes.cover}\n                image={'/api/product/image/'+item.product._id}\n                title={item.product.name}\n              />\n              <div className={classes.details}>\n                <CardContent className={classes.content}>\n                  <Link to={'/product/'+item.product._id}><Typography type=\"title\" component=\"h3\" className={classes.productTitle} color=\"primary\">{item.product.name}</Typography></Link>\n                  <div>\n                    <Typography type=\"subheading\" component=\"h3\" className={classes.price} color=\"primary\">$ {item.product.price}</Typography>\n                    <span className={classes.itemTotal}>${item.product.price * item.quantity}</span>\n                    <span className={classes.itemShop}>Shop: {item.product.shop.name}</span>\n                  </div>\n                </CardContent>\n                <div className={classes.subheading}>\n                  Quantity: <TextField\n                              value={item.quantity}\n                              onChange={handleChange(i)}\n                              type=\"number\"\n                              inputProps={{\n                                  min:1\n                              }}\n                              className={classes.textField}\n                              InputLabelProps={{\n                                shrink: true,\n                              }}\n                              margin=\"normal\"/>\n                            <Button className={classes.removeButton} color=\"primary\" onClick={removeItem(i)}>x Remove</Button>\n                </div>\n              </div>\n            </Card>\n            <Divider/>\n          </span>})\n        }\n        <div className={classes.checkout}>\n          <span className={classes.total}>Total: ${getTotal()}</span>\n          {!props.checkout && (auth.isAuthenticated()?\n            <Button color=\"secondary\" variant=\"contained\" onClick={openCheckout}>Checkout</Button>\n            :\n            <Link to=\"/signin\">\n              <Button color=\"primary\" variant=\"contained\">Sign in to checkout</Button>\n            </Link>)}\n          <Link to='/' className={classes.continueBtn}>\n            <Button variant=\"contained\">Continue Shopping</Button>\n          </Link>\n        </div>\n      </span>) :\n      <Typography variant=\"subtitle1\" component=\"h3\" color=\"primary\">No items added to your cart.</Typography>\n    }\n    </Card>)\n}\n\nCartItems.propTypes = {\n  checkout: PropTypes.bool.isRequired,\n  setCheckout: PropTypes.func.isRequired\n}\n",["208","209"],"/home/petr/projects/project-1/client/src/product/DeleteProduct.js",[],"/home/petr/projects/project-1/client/src/App.js",[],"/home/petr/projects/project-1/client/src/shop/NewShop.js",[],"/home/petr/projects/project-1/client/src/shop/Shop.js",["210"],"import React, {useState, useEffect} from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Avatar from '@material-ui/core/Avatar'\nimport Grid from '@material-ui/core/Grid'\nimport {read} from './api-shop.js'\nimport Products from './../product/Products'\nimport {listByShop} from './../product/api-product.js'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    margin: 30,\n  },\n  card: {\n    textAlign: 'center',\n    paddingBottom: theme.spacing(2)\n  },\n  title: {\n    margin: theme.spacing(2),\n    color: theme.palette.protectedTitle,\n    fontSize: '1.2em'\n  },\n  subheading: {\n    marginTop: theme.spacing(1),\n    color: theme.palette.openTitle\n  },\n  bigAvatar: {\n    width: 100,\n    height: 100,\n    margin: 'auto'\n  },\n  productTitle: {\n    padding:`${theme.spacing(3)}px ${theme.spacing(2.5)}px ${theme.spacing(1)}px ${theme.spacing(2)}px`,\n    color: theme.palette.openTitle,\n    width: '100%',\n    fontSize: '1.2em'\n  }\n}))\n\nexport default function Shop({match}) {\n  const classes = useStyles();\n  const [shop, setShop] = useState('')\n  const [products, setProducts] = useState([])\n  const [error, setError] = useState('')\n\n  useEffect(() => {\n    const abortController = new AbortController()\n    const signal = abortController.signal\n\n    listByShop({\n      shopId: match.params.shopId\n    }, signal).then((data)=>{\n      if (data.error) {\n        setError(data.error)\n      } else {\n        setProducts(data)\n      }\n    })\n    read({\n      shopId: match.params.shopId\n    }, signal).then((data) => {\n      if (data.error) {\n        setError(data.error)\n      } else {\n        setShop(data)\n      }\n    })\n\n    return function cleanup(){\n      abortController.abort()\n    }\n\n  }, [match.params.shopId])\n  useEffect(() => {\n    const abortController = new AbortController()\n    const signal = abortController.signal\n\n    listByShop({\n      shopId: match.params.shopId\n    }, signal).then((data)=>{\n      if (data.error) {\n        setError(data.error)\n      } else {\n        setProducts(data)\n      }\n    })\n\n    return function cleanup(){\n      abortController.abort()\n    }\n\n  }, [match.params.shopId])\n\n    const logoUrl = shop._id\n          ? `/api/shops/logo/${shop._id}?${new Date().getTime()}`\n          : '/api/shops/defaultphoto'\n    return (<div className={classes.root}>\n      <Grid container spacing={8}>\n        <Grid item xs={4} sm={4}>\n          <Card className={classes.card}>\n            <CardContent>\n              <Typography type=\"headline\" component=\"h2\" className={classes.title}>\n                {shop.name}\n              </Typography>\n              <br/>\n              <Avatar src={logoUrl} className={classes.bigAvatar}/><br/>\n                <Typography type=\"subheading\" component=\"h2\" className={classes.subheading}>\n                  {shop.description}\n                </Typography><br/>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={8} sm={8}>\n          <Card>\n            <Typography type=\"title\" component=\"h2\" className={classes.productTitle}>Products</Typography>\n            <Products products={products} searched={false}/>\n          </Card>\n        </Grid>\n      </Grid>\n    </div>)\n}\n","/home/petr/projects/project-1/client/src/order/Order.js",["211","212","213","214"],"import React, {useState, useEffect}  from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Divider from '@material-ui/core/Divider'\nimport {makeStyles} from '@material-ui/core/styles'\nimport {read} from './api-order.js'\nimport {Link} from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    textAlign: 'center',\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(2),\n    flexGrow: 1,\n    margin: 30,\n  },\n  cart: {\n    textAlign: 'left',\n    width: '100%',\n    display: 'inline-flex'\n  },\n  details: {\n    display: 'inline-block',\n    width: \"100%\",\n    padding: \"4px\"\n  },\n  content: {\n    flex: '1 0 auto',\n    padding: '16px 8px 0px'\n  },\n  cover: {\n    width: 160,\n    height: 125,\n    margin: '8px'\n  },\n  info: {\n    color: 'rgba(83, 170, 146, 0.82)',\n    fontSize: '0.95rem',\n    display: 'inline'\n  },\n  thanks:{\n    color: 'rgb(136, 183, 107)',\n    fontSize: '0.9rem',\n    fontStyle: 'italic'\n  },\n  innerCardItems: {\n    textAlign: 'left',\n    margin: '24px 10px 24px 24px',\n    padding: '24px 20px 40px 20px',\n    backgroundColor: '#80808017'\n  },\n  innerCard: {\n    textAlign: 'left',\n    margin: '24px 24px 24px 10px',\n    padding: '30px 45px 40px 45px',\n    backgroundColor: '#80808017'\n  },\n  title: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n    color: theme.palette.protectedTitle,\n    fontSize: '1.2em'\n  },\n  subheading: {\n    marginTop: theme.spacing(1),\n    color: theme.palette.openTitle\n  },\n  productTitle: {\n    fontSize: '1.15em',\n    marginBottom: '5px'\n  },\n  itemTotal: {\n    float: 'right',\n    marginRight: '40px',\n    fontSize: '1.5em',\n    color: 'rgb(72, 175, 148)'\n  },\n  itemShop: {\n    display: 'block',\n    fontSize: '1em',\n    color: '#78948f'\n  },\n  checkout: {\n    float: 'right',\n    margin: '24px'\n  },\n  total: {\n    fontSize: '1.2em',\n    color: 'rgb(53, 97, 85)',\n    marginRight: '16px',\n    fontWeight: '600',\n    verticalAlign: 'bottom'\n  }\n}))\n\nexport default function Order({match}) {\n  const classes = useStyles()\n  const [order, setOrder] = useState({products:[], delivery_address:{}})\n\n  useEffect(() => {\n    const abortController = new AbortController()\n    const signal = abortController.signal\n    read({\n      orderId: match.params.orderId\n    }).then((data) => {\n      if (data.error) {\n        console.log(data.error)\n      } else {\n        setOrder(data)\n      }\n    })\n    return function cleanup(){\n      abortController.abort()\n    }\n  }, [])\n\n  const getTotal = () => {\n    return order.products.reduce((a, b) => {\n       const quantity = b.status == \"Cancelled\" ? 0 : b.quantity\n        return a + (quantity*b.product.price)\n    }, 0)\n  }\n\n    return (\n      <Card className={classes.card}>\n        <Typography type=\"headline\" component=\"h2\" className={classes.title}>\n            Order Details\n        </Typography>\n        <Typography type=\"subheading\" component=\"h2\" className={classes.subheading}>\n            Order Code: <strong>{order._id}</strong> <br/> Placed on {(new Date(order.created)).toDateString()}\n        </Typography><br/>\n        <Grid container spacing={4}>\n            <Grid item xs={7} sm={7}>\n                <Card className={classes.innerCardItems}>\n                  {order.products.map((item, i) => {\n                    return  <span key={i}>\n                      <Card className={classes.cart} >\n                        <CardMedia\n                          className={classes.cover}\n                          image={'/api/product/image/'+item.product._id}\n                          title={item.product.name}\n                        />\n                        <div className={classes.details}>\n                          <CardContent className={classes.content}>\n                            <Link to={'/product/'+item.product._id}><Typography type=\"title\" component=\"h3\" className={classes.productTitle} color=\"primary\">{item.product.name}</Typography></Link>\n                            <Typography type=\"subheading\" component=\"h3\" className={classes.itemShop} color=\"primary\">$ {item.product.price} x {item.quantity}</Typography>\n                            <span className={classes.itemTotal}>${item.product.price * item.quantity}</span>\n                            <span className={classes.itemShop}>Shop: {item.shop.name}</span>\n                            <Typography type=\"subheading\" component=\"h3\" color={item.status == \"Cancelled\" ? \"error\":\"secondary\"}>Status: {item.status}</Typography>\n                          </CardContent>\n                        </div>\n                      </Card>\n                      <Divider/>\n                    </span>})\n                  }\n                  <div className={classes.checkout}>\n                    <span className={classes.total}>Total: ${getTotal()}</span>\n                  </div>\n                </Card>\n            </Grid>\n            <Grid item xs={5} sm={5}>\n              <Card className={classes.innerCard}>\n                <Typography type=\"subheading\" component=\"h2\" className={classes.productTitle} color=\"primary\">\n                 Deliver to:\n                </Typography>\n                <Typography type=\"subheading\" component=\"h3\" className={classes.info} color=\"primary\"><strong>{order.customer_name}</strong></Typography><br/>\n                <Typography type=\"subheading\" component=\"h3\" className={classes.info} color=\"primary\">{order.customer_email}</Typography><br/>\n                <br/>\n                <Divider/>\n                <br/>\n                <Typography type=\"subheading\" component=\"h3\" className={classes.itemShop} color=\"primary\">{order.delivery_address.street}</Typography>\n                <Typography type=\"subheading\" component=\"h3\" className={classes.itemShop} color=\"primary\">{order.delivery_address.city}, {order.delivery_address.state} {order.delivery_address.zipcode}</Typography>\n                <Typography type=\"subheading\" component=\"h3\" className={classes.itemShop} color=\"primary\">{order.delivery_address.country}</Typography><br/>\n                <Typography type=\"subheading\" component=\"h3\" className={classes.thanks} color=\"primary\">Thank you for shopping with us! <br/>You can track the status of your purchased items on this page.</Typography>\n              </Card>\n            </Grid>\n        </Grid>\n      </Card>\n    )\n}\n","/home/petr/projects/project-1/client/src/cart/cart-helper.js",[],["215","216"],"/home/petr/projects/project-1/client/src/order/MyOrders.js",["217","218"],"import React, {useState, useEffect} from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport auth from './../auth/auth-helper'\nimport {listByUser} from './api-order.js'\nimport {Link} from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n  root: theme.mixins.gutters({\n    maxWidth: 600,\n    margin: '12px 24px',\n    padding: theme.spacing(3),\n    backgroundColor: '#3f3f3f0d'\n  }),\n  title: {\n    margin: `${theme.spacing(2)}px 0 12px ${theme.spacing(1)}px`,\n    color: theme.palette.openTitle\n  }\n}))\n\nexport default function MyOrders(){\n  const classes = useStyles()\n  const [orders, setOrders] = useState([])\n  const jwt = auth.isAuthenticated()\n\n  useEffect(() => {\n    const abortController = new AbortController()\n    const signal = abortController.signal\n    listByUser({\n      userId: jwt.user._id\n    }, {t: jwt.token}).then((data) => {\n      if (data.error) {\n        console.log(data.error)\n      } else {\n        setOrders(data)\n      }\n    })\n    return function cleanup(){\n      abortController.abort()\n    }\n  }, [])\n\n    return (\n      <Paper className={classes.root} elevation={4}>\n        <Typography type=\"title\" className={classes.title}>\n          Your Orders\n        </Typography>\n        <List dense>\n          {orders.map((order, i) => {\n            return <span key={i}>\n                      <Link to={\"/order/\"+order._id}>\n                        <ListItem button>\n                          <ListItemText primary={<strong>{\"Order # \"+order._id}</strong>} secondary={(new Date(order.created)).toDateString()}/>\n                        </ListItem>\n                      </Link>\n                      <Divider/>\n                    </span>})}\n        </List>\n      </Paper>\n    )\n}\n","/home/petr/projects/project-1/client/src/auth/PrivateRoute.js",["219"],"import React, { Component } from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport auth from './auth-helper'\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={props => (\n    auth.isAuthenticated() ? (\n      <Component {...props}/>\n    ) : (\n      <Redirect to={{\n        pathname: '/signin',\n        state: { from: props.location }\n      }}/>\n    )\n  )}/>\n)\n\nexport default PrivateRoute\n","/home/petr/projects/project-1/client/src/order/api-order.js",[],"/home/petr/projects/project-1/client/src/order/ProductOrderEdit.js",["220","221","222","223","224"],"import React, {useState, useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport {makeStyles} from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport TextField from '@material-ui/core/TextField'\nimport Divider from '@material-ui/core/Divider'\nimport auth from './../auth/auth-helper'\nimport {getStatusValues, update, cancelProduct, processCharge} from './api-order.js'\n\nconst useStyles = makeStyles(theme => ({\n  nested: {\n    paddingLeft: theme.spacing(4),\n    paddingBottom: 0\n  },\n  listImg: {\n    width: '70px',\n    verticalAlign: 'top',\n    marginRight: '10px'\n  },\n  listDetails: {\n    display: \"inline-block\"\n  },\n  listQty: {\n    margin: 0,\n    fontSize: '0.9em',\n    color: '#5f7c8b'\n  },\n  textField: {\n    width: '160px',\n    marginRight: '16px'\n  },\n  statusMessage: {\n    position: 'absolute',\n    zIndex: '12',\n    right: '5px',\n    padding: '5px'\n  }\n}))\nexport default function ProductOrderEdit (props){\n  const classes = useStyles()\n  const [values, setValues] = useState({\n      open: 0,\n      statusValues: [],\n      error: ''\n  })\n  const jwt = auth.isAuthenticated()\n  useEffect(() => {\n    const abortController = new AbortController()\n    const signal = abortController.signal\n    getStatusValues(signal).then((data) => {\n      if (data.error) {\n        setValues({...values, error: \"Could not get status\"})\n      } else {\n        setValues({...values, statusValues: data, error: ''})\n      }\n    })\n    return function cleanup(){\n      abortController.abort()\n    }\n  }, [])\n\n  const handleStatusChange = productIndex => event => {\n    let order = props.order\n    order.products[productIndex].status = event.target.value\n    let product = order.products[productIndex]\n\n    if (event.target.value == \"Cancelled\") {\n      cancelProduct({\n          shopId: props.shopId,\n          productId: product.product._id\n        }, {\n          t: jwt.token\n        }, {\n          cartItemId: product._id,\n          status: event.target.value,\n          quantity: product.quantity\n        })\n        .then((data) => {\n          if (data.error) {\n            setValues({\n              ...values,\n              error: \"Status not updated, try again\"\n            })\n          } else {\n            props.updateOrders(props.orderIndex, order)\n            setValues({\n              ...values,\n              error: ''\n            })\n          }\n        })\n    } else if (event.target.value == \"Processing\") {\n      processCharge({\n          userId: jwt.user._id,\n          shopId: props.shopId,\n          orderId: order._id\n        }, {\n          t: jwt.token\n        }, {\n          cartItemId: product._id,\n          status: event.target.value,\n          amount: (product.quantity * product.product.price)\n        })\n        .then((data) => {\n          if (data.error) {\n            setValues({\n              ...values,\n              error: \"Status not updated, try again\"\n            })\n          } else {\n            props.updateOrders(props.orderIndex, order)\n            setValues({\n              ...values,\n              error: ''\n            })\n          }\n        })\n    } else {\n      update({\n          shopId: props.shopId\n        }, {\n          t: jwt.token\n        }, {\n          cartItemId: product._id,\n          status: event.target.value\n        })\n        .then((data) => {\n          if (data.error) {\n            setValues({\n              ...values,\n              error: \"Status not updated, try again\"\n            })\n          } else {\n            props.updateOrders(props.orderIndex, order)\n            setValues({\n              ...values,\n              error: ''\n            })\n          }\n        })\n    }\n  }\n    return (\n    <div>\n      <Typography component=\"span\" color=\"error\" className={classes.statusMessage}>\n        {values.error}\n      </Typography>\n      <List disablePadding style={{backgroundColor:'#f8f8f8'}}>\n        {props.order.products.map((item, index) => {\n          return <span key={index}>\n                  { item.shop == props.shopId &&\n                    <ListItem button className={classes.nested}>\n                      <ListItemText\n                        primary={<div>\n                                    <img className={classes.listImg} src={'/api/product/image/'+item.product._id}/>\n                                    <div className={classes.listDetails}>\n                                      {item.product.name}\n                                      <p className={classes.listQty}>{\"Quantity: \"+item.quantity}</p>\n                                    </div>\n                                  </div>}/>\n                      <TextField\n                        id=\"select-status\"\n                        select\n                        label=\"Update Status\"\n                        className={classes.textField}\n                        value={item.status}\n                        onChange={handleStatusChange(index)}\n                        SelectProps={{\n                          MenuProps: {\n                            className: classes.menu,\n                          },\n                        }}\n                        margin=\"normal\"\n                      >\n                        {values.statusValues.map(option => (\n                          <MenuItem key={option} value={option}>\n                            {option}\n                          </MenuItem>\n                        ))}\n                      </TextField>\n                    </ListItem>\n                  }\n                  <Divider style={{margin: 'auto', width: \"80%\"}}/>\n                </span>})\n              }\n      </List>\n    </div>)\n}\nProductOrderEdit.propTypes = {\n  shopId: PropTypes.string.isRequired,\n  order: PropTypes.object.isRequired,\n  orderIndex: PropTypes.number.isRequired,\n  updateOrders: PropTypes.func.isRequired\n}\n","/home/petr/projects/project-1/client/src/auth/Signin.js",[],"/home/petr/projects/project-1/client/src/auth/auth-helper.js",[],"/home/petr/projects/project-1/client/src/product/EditProduct.js",["225","226"],"import React, {useEffect, useState} from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport Icon from '@material-ui/core/Icon'\nimport Avatar from '@material-ui/core/Avatar'\nimport auth from './../auth/auth-helper'\nimport FileUpload from '@material-ui/icons/AddPhotoAlternate'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {withStyles} from '@material-ui/core/styles'\nimport {read, update} from './api-product.js'\nimport {Link, Redirect} from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    margin: 'auto',\n    textAlign: 'center',\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(2),\n    maxWidth: 500,\n    paddingBottom: theme.spacing(2)\n  },\n  title: {\n    margin: theme.spacing(2),\n    color: theme.palette.protectedTitle,\n    fontSize: '1.2em'\n  },\n  error: {\n    verticalAlign: 'middle'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 400\n  },\n  submit: {\n    margin: 'auto',\n    marginBottom: theme.spacing(2)\n  },\n  bigAvatar: {\n    width: 60,\n    height: 60,\n    margin: 'auto'\n  },\n  input: {\n    display: 'none'\n  },\n  filename:{\n    marginLeft:'10px'\n  }\n}))\n\nexport default function EditProduct ({match}) {\n  const classes = useStyles()\n  const [values, setValues] = useState({\n      name: '',\n      description: '',\n      image: '',\n      category: '',\n      quantity: '',\n      price: '',\n      redirect: false,\n      error: ''\n    })\n\n    const jwt = auth.isAuthenticated()\n    useEffect(() => {\n      const abortController = new AbortController()\n      const signal = abortController.signal\n      read({\n        productId: match.params.productId\n      }, signal).then((data) => {\n        if (data.error) {\n          setValues({...values, error: data.error})\n        } else {\n          setValues({...values, id: data._id, name: data.name, description: data.description, category: data.category, quantity:data.quantity, price: data.price})\n        }\n      })\n    return function cleanup(){\n      abortController.abort()\n    }\n  }, [])\n  const clickSubmit = () => {\n    let productData = new FormData()\n    values.name && productData.append('name', values.name)\n    values.description && productData.append('description', values.description)\n    values.image && productData.append('image', values.image)\n    values.category && productData.append('category', values.category)\n    values.quantity && productData.append('quantity', values.quantity)\n    values.price && productData.append('price', values.price)\n  \n    update({\n      shopId: match.params.shopId,\n      productId: match.params.productId\n    }, {\n      t: jwt.token\n    }, productData).then((data) => {\n      if (data.error) {\n        setValues({...values, error: data.error})\n      } else {\n        setValues({...values, 'redirect': true})\n      }\n    })\n  }\n  const handleChange = name => event => {\n    const value = name === 'image'\n      ? event.target.files[0]\n      : event.target.value\n    setValues({...values,  [name]: value })\n  }\n    const imageUrl = values.id\n          ? `/api/product/image/${values.id}?${new Date().getTime()}`\n          : '/api/product/defaultphoto'\n    if (values.redirect) {\n      return (<Redirect to={'/seller/shop/edit/'+match.params.shopId}/>)\n    }\n    return (<div>\n      <Card className={classes.card}>\n        <CardContent>\n          <Typography type=\"headline\" component=\"h2\" className={classes.title}>\n            Edit Product\n          </Typography><br/>\n          <Avatar src={imageUrl} className={classes.bigAvatar}/><br/>\n          <input accept=\"image/*\" onChange={handleChange('image')} className={classes.input} id=\"icon-button-file\" type=\"file\" />\n          <label htmlFor=\"icon-button-file\">\n            <Button variant=\"contained\" color=\"secondary\" component=\"span\">\n              Change Image\n              <FileUpload/>\n            </Button>\n          </label> <span className={classes.filename}>{values.image ? values.image.name : ''}</span><br/>\n          <TextField id=\"name\" label=\"Name\" className={classes.textField} value={values.name} onChange={handleChange('name')} margin=\"normal\"/><br/>\n          <TextField\n            id=\"multiline-flexible\"\n            label=\"Description\"\n            multiline\n            rows=\"3\"\n            value={values.description}\n            onChange={handleChange('description')}\n            className={classes.textField}\n            margin=\"normal\"\n          /><br/>\n          <TextField id=\"category\" label=\"Category\" className={classes.textField} value={values.category} onChange={handleChange('category')} margin=\"normal\"/><br/>\n          <TextField id=\"quantity\" label=\"Quantity\" className={classes.textField} value={values.quantity} onChange={handleChange('quantity')} type=\"number\" margin=\"normal\"/><br/>\n          <TextField id=\"price\" label=\"Price\" className={classes.textField} value={values.price} onChange={handleChange('price')} type=\"number\" margin=\"normal\"/><br/>\n          {\n            values.error && (<Typography component=\"p\" color=\"error\">\n              <Icon color=\"error\" className={classes.error}>error</Icon>\n              {values.error}</Typography>)\n          }\n        </CardContent>\n        <CardActions>\n          <Button color=\"primary\" variant=\"contained\" onClick={clickSubmit} className={classes.submit}>Update</Button>\n          <Link to={'/seller/shops/edit/'+match.params.shopId} className={classes.submit}><Button variant=\"contained\">Cancel</Button></Link>\n        </CardActions>\n      </Card>\n    </div>)\n}\n","/home/petr/projects/project-1/client/src/product/api-product.js",[],"/home/petr/projects/project-1/client/src/shop/api-shop.js",[],"/home/petr/projects/ecommerce/client/src/App.js",[],"/home/petr/projects/ecommerce/client/src/user/Users.js",[],"/home/petr/projects/ecommerce/client/src/auth/Signin.js",[],"/home/petr/projects/ecommerce/client/src/product/Product.js",["227"],"/home/petr/projects/ecommerce/client/src/product/Categories.js",["228","229","230","231"],"/home/petr/projects/ecommerce/client/src/cart/AddToCart.js",[],"/home/petr/projects/ecommerce/client/src/product/DeleteProduct.js",[],{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","severity":1,"message":"237","line":74,"column":6,"nodeType":"238","endLine":74,"endColumn":27,"suggestions":"239"},{"ruleId":"236","severity":1,"message":"240","line":62,"column":6,"nodeType":"238","endLine":62,"endColumn":8,"suggestions":"241"},{"ruleId":"242","severity":1,"message":"243","line":95,"column":82,"nodeType":"244","messageId":"245","endLine":95,"endColumn":84},{"ruleId":"246","severity":1,"message":"247","line":1,"column":27,"nodeType":"248","messageId":"249","endLine":1,"endColumn":36},{"ruleId":"232","replacedBy":"250"},{"ruleId":"234","replacedBy":"251"},{"ruleId":"246","severity":1,"message":"252","line":11,"column":8,"nodeType":"248","messageId":"249","endLine":11,"endColumn":14},{"ruleId":"236","severity":1,"message":"253","line":74,"column":6,"nodeType":"238","endLine":74,"endColumn":27,"suggestions":"254"},{"ruleId":"242","severity":1,"message":"243","line":93,"column":45,"nodeType":"244","messageId":"245","endLine":93,"endColumn":47},{"ruleId":"246","severity":1,"message":"247","line":1,"column":27,"nodeType":"248","messageId":"249","endLine":1,"endColumn":36},{"ruleId":"232","replacedBy":"255"},{"ruleId":"234","replacedBy":"256"},{"ruleId":"236","severity":1,"message":"257","line":87,"column":6,"nodeType":"238","endLine":87,"endColumn":8,"suggestions":"258"},{"ruleId":"236","severity":1,"message":"259","line":61,"column":8,"nodeType":"238","endLine":61,"endColumn":10,"suggestions":"260"},{"ruleId":"242","severity":1,"message":"243","line":84,"column":23,"nodeType":"244","messageId":"245","endLine":84,"endColumn":25},{"ruleId":"242","severity":1,"message":"243","line":86,"column":49,"nodeType":"244","messageId":"245","endLine":86,"endColumn":51},{"ruleId":"242","severity":1,"message":"243","line":71,"column":22,"nodeType":"244","messageId":"245","endLine":71,"endColumn":24},{"ruleId":"242","severity":1,"message":"243","line":100,"column":27,"nodeType":"244","messageId":"245","endLine":100,"endColumn":29},{"ruleId":"242","severity":1,"message":"243","line":117,"column":32,"nodeType":"244","messageId":"245","endLine":117,"endColumn":34},{"ruleId":"232","replacedBy":"261"},{"ruleId":"234","replacedBy":"262"},{"ruleId":"246","severity":1,"message":"263","line":47,"column":10,"nodeType":"248","messageId":"249","endLine":47,"endColumn":15},{"ruleId":"246","severity":1,"message":"264","line":105,"column":11,"nodeType":"248","messageId":"249","endLine":105,"endColumn":17},{"ruleId":"236","severity":1,"message":"265","line":118,"column":6,"nodeType":"238","endLine":118,"endColumn":8,"suggestions":"266"},{"ruleId":"242","severity":1,"message":"243","line":122,"column":34,"nodeType":"244","messageId":"245","endLine":122,"endColumn":36},{"ruleId":"242","severity":1,"message":"243","line":152,"column":93,"nodeType":"244","messageId":"245","endLine":152,"endColumn":95},{"ruleId":"232","replacedBy":"267"},{"ruleId":"234","replacedBy":"268"},{"ruleId":"246","severity":1,"message":"264","line":33,"column":11,"nodeType":"248","messageId":"249","endLine":33,"endColumn":17},{"ruleId":"236","severity":1,"message":"240","line":46,"column":6,"nodeType":"238","endLine":46,"endColumn":8,"suggestions":"269"},{"ruleId":"246","severity":1,"message":"270","line":1,"column":17,"nodeType":"248","messageId":"249","endLine":1,"endColumn":26},{"ruleId":"236","severity":1,"message":"271","line":64,"column":6,"nodeType":"238","endLine":64,"endColumn":8,"suggestions":"272"},{"ruleId":"242","severity":1,"message":"243","line":71,"column":28,"nodeType":"244","messageId":"245","endLine":71,"endColumn":30},{"ruleId":"242","severity":1,"message":"243","line":96,"column":35,"nodeType":"244","messageId":"245","endLine":96,"endColumn":37},{"ruleId":"242","severity":1,"message":"243","line":155,"column":31,"nodeType":"244","messageId":"245","endLine":155,"endColumn":33},{"ruleId":"273","severity":1,"message":"274","line":159,"column":37,"nodeType":"275","endLine":159,"endColumn":116},{"ruleId":"246","severity":1,"message":"276","line":13,"column":9,"nodeType":"248","messageId":"249","endLine":13,"endColumn":19},{"ruleId":"236","severity":1,"message":"277","line":85,"column":6,"nodeType":"238","endLine":85,"endColumn":8,"suggestions":"278"},{"ruleId":"246","severity":1,"message":"263","line":67,"column":10,"nodeType":"248","messageId":"249","endLine":67,"endColumn":15},{"ruleId":"246","severity":1,"message":"264","line":62,"column":11,"nodeType":"248","messageId":"249","endLine":62,"endColumn":17},{"ruleId":"236","severity":1,"message":"279","line":76,"column":6,"nodeType":"238","endLine":76,"endColumn":8,"suggestions":"280"},{"ruleId":"242","severity":1,"message":"243","line":100,"column":119,"nodeType":"244","messageId":"245","endLine":100,"endColumn":121},{"ruleId":"242","severity":1,"message":"243","line":101,"column":130,"nodeType":"244","messageId":"245","endLine":101,"endColumn":132},"no-native-reassign",["281"],"no-negated-in-lhs",["282"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'jwt.token' and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.","ArrayExpression",["283"],"React Hook useEffect has missing dependencies: 'jwt.token' and 'jwt.user._id'. Either include them or remove the dependency array.",["284"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",["281"],["282"],"'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'jwt.token'. Either include it or remove the dependency array.",["285"],["281"],["282"],"React Hook useEffect has missing dependencies: 'match.params.shopId' and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["286"],"React Hook useEffect has missing dependencies: 'jwt.token' and 'match.params.shopId'. Either include them or remove the dependency array.",["287"],["281"],["282"],"'error' is assigned a value but never used.","'signal' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'match.params.orderId'. Either include it or remove the dependency array.",["288"],["281"],["282"],["289"],"'Component' is defined but never used.","React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["290"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'withStyles' is defined but never used.","React Hook useEffect has missing dependencies: 'match.params.productId' and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["291"],"React Hook useEffect has a missing dependency: 'props.categories'. Either include it or remove the dependency array.",["292"],"no-global-assign","no-unsafe-negation",{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"295","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},"Update the dependencies array to be: [jwt.token, match.params.userId, values]",{"range":"312","text":"313"},"Update the dependencies array to be: [jwt.token, jwt.user._id]",{"range":"314","text":"315"},"Update the dependencies array to be: [jwt.token, match.params.userId]",{"range":"316","text":"317"},"Update the dependencies array to be: [match.params.shopId, values]",{"range":"318","text":"319"},"Update the dependencies array to be: [jwt.token, match.params.shopId]",{"range":"320","text":"321"},"Update the dependencies array to be: [match.params.orderId]",{"range":"322","text":"323"},{"range":"324","text":"315"},"Update the dependencies array to be: [values]",{"range":"325","text":"326"},"Update the dependencies array to be: [match.params.productId, values]",{"range":"327","text":"328"},"Update the dependencies array to be: [props.categories]",{"range":"329","text":"330"},[2041,2062],"[jwt.token, match.params.userId, values]",[1967,1969],"[jwt.token, jwt.user._id]",[2226,2247],"[jwt.token, match.params.userId]",[2259,2261],"[match.params.shopId, values]",[1859,1861],"[jwt.token, match.params.shopId]",[2683,2685],"[match.params.orderId]",[1353,1355],[1742,1744],"[values]",[2325,2327],"[match.params.productId, values]",[1931,1933],"[props.categories]"]